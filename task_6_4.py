"""Урок 6. Знакомство с Python
(см. task_6_3.py) 3. Есть два файла: в одном хранятся ФИО пользователей сайта,
а в другом — данные об их хобби.
Известно, что при хранении данных используется принцип: одна строка —
один пользователь, разделитель между значениями — запятая. Написать код,
загружающий данные из обоих файлов и формирующий из них словарь: ключи — ФИО,
значения — данные о хобби. Сохранить словарь в файл.
Проверить сохранённые данные. Если в файле, хранящем данные о хобби, меньше
записей, чем в файле с ФИО, задаём в словае значение None. Если наоборот —
выходим из скрипта с кодом «1».
При решении задачи считать, что объём данных в файлах во много раз
меньше объема ОЗУ.
Фрагмент файла с данными о пользователях (users.csv):
Иванов,Иван,Иванович
Петров,Петр,Петрович
Фрагмент файла с данными о хобби (hobby.csv):
скалолазание,охота
горные лыжи"""
"""4. *(вместо 3) Решить задачу 3 для ситуации, когда объём данных в файлах  
превышает объём ОЗУ (разумеется, не нужно реально создавать такие большие 
файлы, это просто задел на будущее проекта). Только теперь не нужно создавать 
словарь с данными. Вместо этого нужно сохранить объединенные данные в новый 
файл (users_hobby.txt). Хобби пишем через двоеточие и пробел после ФИО:
Иванов,Иван,Иванович: скалолазание,охота
Петров,Петр,Петрович: горные лыжи"""


def create_users_hobby(users: str, hobbs: str, res: str):
    """Собирает из файлов ФИО (users) и хобби (hobbs), пишет их в рез. файл
    (res) в виде 'ФИО: хобби', 1 строка - 1 запись.
    Данные из файлов не обрабатываем - пишем как есть!
    Если в хобби, меньше записей - пишем: 'ФИО: None'.
    Если в файле с ФИО, меньше записей — выход из скрипта с кодом 1"""

    with open(users, 'r', encoding='utf-8') as f_users, \
            open(hobbs, 'r', encoding='utf-8') as f_hobbs, \
            open(res, 'w', encoding='utf-8') as f_result:

        while True:
            user = f_users.readline().strip()
            hobby = f_hobbs.readline().strip()

            if user and hobby:
                f_result.write(f"{user}: {hobby}\n")
            elif user and not hobby:
                f_result.write(f"{user}: None\n")
            elif not user and hobby:
                print(f"Кол-во записей в файле {users} не должно быть "
                      f"меньше, чем кол-во записей в файле {hobbs}!")
                exit(1)
            else:
                break


if __name__ == '__main__':

    RESULT_FILE = 'users_hobby.txt'
    USERS_FILE = 'users.csv'
    HOB_FILE = 'hobby.csv'

    create_users_hobby(USERS_FILE, HOB_FILE, RESULT_FILE)

    print(f"Результат работы скрипта (см. файл {RESULT_FILE}):\n")
    with open(RESULT_FILE, 'r', encoding='utf-8') as f:
        print(f.read())
